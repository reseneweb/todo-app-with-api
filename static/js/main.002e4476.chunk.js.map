{"version":3,"sources":["utils/fetchClient.ts","types/FilterBy.tsx","api/todos.ts","components/Header/Header.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodosFilter/TodosFiter.tsx","components/Footer/Footer.tsx","App.tsx","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","FilterBy","client","deleteTodo","todoId","updateTodo","id","userId","title","completed","Header","todos","setTodos","USER_ID","toggleAll","handleToggleAll","setErrorMessage","tempTodo","setTempTodo","focusedInput","useState","query","setQuery","disabledInput","setDisabledInput","inputRef","useRef","addTodo","tempId","Date","now","createTodo","newTodo","catch","finally","useEffect","current","focus","className","length","aria-label","type","cn","active","data-cy","onClick","onSubmit","event","preventDefault","trim","placeholder","value","onChange","target","ref","disabled","TodoItem","todo","setFocusedInput","editing","setEditing","currentIdToLoading","setCurrentIdToLoading","todoTitle","setTodoTitle","titleField","getTodoById","find","item","handleDelete","updatedTodos","filter","handleTitleSubmit","PressedKey","a","todoToUpdate","updatedTodo","map","handleBlur","checked","error","onKeyDown","e","key","onBlur","onDoubleClick","TodoList","React","memo","filteredTodos","TodosFilter","filteredBy","setFilteredBy","onFilterSelect","href","selected","all","Footer","numberOfNotCompleted","completedTodos","deletePromises","success","results","successIds","result","includes","some","completedTodo","App","setToggleAll","errorMessage","timeoutId","clearTimeout","targetStatus","updatePromises","updated","updatedTodosList","newTodos","ut","root","document","getElementById","render"],"mappings":"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","file":"static/js/main.002e4476.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(100)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","export enum FilterBy {\n  all = 'All',\n  active = 'Active',\n  completed = 'Completed',\n}\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const deleteTodo = (todoId: number) => {\n  return client.delete(`/todos/${todoId}`);\n};\n\nexport const createTodo\n= ({\n  userId,\n  title,\n  completed,\n}: Omit<Todo, 'id'>) => {\n  return client.post<Todo>('/todos', {\n    userId,\n    title,\n    completed,\n  });\n};\n\nexport const updateTodo\n= ({\n  id,\n  userId,\n  title,\n  completed,\n}: Todo) => {\n  return client.patch<Todo>(`/todos/${id}`, {\n    userId,\n    title,\n    completed,\n  });\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { createTodo } from '../../api/todos';\n\ntype Props = {\n  todos: Todo[];\n  setTodos: (todos: Todo[]) => void;\n  USER_ID: number;\n  toggleAll: boolean;\n  handleToggleAll: () => void;\n  setErrorMessage: (arg: string) => void;\n  tempTodo: Todo | null;\n  setTempTodo: (todo: Todo | null) => void;\n  focusedInput: boolean;\n};\n\nexport const Header: React.FC<Props> = ({\n  todos,\n  setTodos,\n  USER_ID,\n  toggleAll,\n  handleToggleAll,\n  setErrorMessage,\n  tempTodo,\n  setTempTodo,\n  focusedInput,\n}) => {\n  const [query, setQuery] = useState('');\n  const [disabledInput, setDisabledInput] = useState(false);\n\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  useEffect(() => {\n    if ((inputRef.current) && (tempTodo === null)) {\n      inputRef.current.focus();\n    }\n  }, [tempTodo]);\n\n  useEffect(() => {\n    if (focusedInput) {\n      inputRef.current?.focus();\n    }\n  }, [focusedInput]);\n\n  function addTodo({ userId, title, completed }: Todo) {\n    const tempId = Date.now();\n    const currentTempTodo = {\n      userId,\n      title,\n      completed,\n      id: tempId,\n    };\n\n    setTempTodo(currentTempTodo);\n    setDisabledInput(true);\n    setErrorMessage('');\n\n    createTodo({ userId, title, completed })\n      .then(newTodo => {\n        setTodos([...todos, newTodo]);\n        setTempTodo(null);\n        setQuery('');\n      })\n      .catch(() => {\n        setErrorMessage('Unable to add a todo');\n        setTempTodo(null);\n      })\n      .finally(() => {\n        setDisabledInput(false);\n      });\n  }\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!query.trim()) {\n      setErrorMessage('Title should not be empty');\n\n      return;\n    }\n\n    addTodo({\n      id: todos.length,\n      userId: USER_ID,\n      title: query.trim(),\n      completed: false,\n    });\n  };\n\n  return (\n    <header className=\"todoapp__header\">\n      {!!todos.length && (\n        <button\n          aria-label=\"button\"\n          type=\"button\"\n          className={cn('todoapp__toggle-all', { active: toggleAll })}\n          data-cy=\"ToggleAllButton\"\n          onClick={handleToggleAll}\n        />\n      )}\n\n      <form onSubmit={handleSubmit}>\n        <input\n          data-cy=\"NewTodoField\"\n          type=\"text\"\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={query}\n          onChange={handleTitleChange}\n          ref={inputRef}\n          disabled={disabledInput}\n        />\n      </form>\n    </header>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useEffect, useRef } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { deleteTodo, updateTodo } from '../../api/todos';\n\ntype Props = {\n  todo: Todo,\n  todos: Todo[];\n  setTodos: (todos: Todo[]) => void;\n  setErrorMessage: (arg: string) => void;\n  USER_ID: number;\n  setFocusedInput: (arg: boolean) => void;\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  todos,\n  setTodos,\n  setErrorMessage,\n  USER_ID,\n  setFocusedInput,\n}) => {\n  const [editing, setEditing] = useState(false);\n  const [currentIdToLoading, setCurrentIdToLoading]\n    = useState<number | null>(null);\n  const [todoTitle, setTodoTitle] = useState(todo.title.trim());\n\n  const titleField = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (titleField.current && editing) {\n      titleField.current.focus();\n    }\n  }, [editing]);\n\n  function getTodoById(todoId: number): Todo | null {\n    return todos.find((item: Todo) => item.id === todoId) || null;\n  }\n\n  const handleDelete = (todoId: number) => {\n    setErrorMessage('');\n    setCurrentIdToLoading(todoId);\n    setFocusedInput(false);\n\n    deleteTodo(todoId)\n      .then(() => {\n        const updatedTodos = todos.filter(item => item.id !== todoId);\n\n        setTodos(updatedTodos);\n        setEditing(false);\n      })\n      .catch(() => {\n        setErrorMessage('Unable to delete a todo');\n        setCurrentIdToLoading(null);\n\n        setFocusedInput(true);\n      })\n      .finally(() => {\n        setCurrentIdToLoading(null);\n        setFocusedInput(true);\n      });\n  };\n\n  const handleTitleSubmit = async (PressedKey: string) => {\n    if (PressedKey !== 'Enter' && PressedKey !== 'Escape') {\n      return;\n    }\n\n    if (currentIdToLoading !== null) {\n      return;\n    }\n\n    const todoToUpdate = getTodoById(todo.id);\n\n    if (!todoToUpdate) {\n      return;\n    }\n\n    if (PressedKey === 'Escape') {\n      setTodoTitle(todoToUpdate.title);\n      setEditing(false);\n\n      return;\n    }\n\n    if (PressedKey === 'Enter') {\n      if (todoTitle.trim() === '') {\n        handleDelete(todo.id);\n\n        return;\n      }\n\n      if (todoTitle.trim() === todo.title.trim()) {\n        setEditing(false);\n\n        return;\n      }\n\n      setCurrentIdToLoading(todo.id);\n      setErrorMessage('');\n\n      try {\n        const updatedTodo = await updateTodo({\n          id: todo.id,\n          userId: USER_ID,\n          title: todoTitle.trim(),\n          completed: todo.completed,\n        });\n\n        setTodos(todos.map(\n          item => (item.id === updatedTodo.id ? updatedTodo : item),\n        ));\n      } catch (error) {\n        setErrorMessage('Unable to update a todo');\n      } finally {\n        setCurrentIdToLoading(null);\n        setEditing(false);\n      }\n    }\n  };\n\n  const handleTitleEditing = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTodoTitle(event?.target.value);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter' || e.key === 'Escape') {\n      e.preventDefault();\n      handleTitleSubmit(e.key);\n    }\n  };\n\n  const handleBlur = async () => {\n    if (editing) {\n      await handleTitleSubmit('Enter');\n      setEditing(false);\n    }\n  };\n\n  const handleCheckboxClick = () => {\n    setErrorMessage('');\n    setCurrentIdToLoading(todo.id);\n\n    updateTodo({\n      id: todo.id,\n      userId: USER_ID,\n      title: todo.title,\n      completed: !todo.completed,\n    })\n      .then(newTodo => {\n        setTodos(todos.map(item => {\n          if (item.id === newTodo.id) {\n            return {\n              ...item,\n              completed: !item.completed,\n            };\n          }\n\n          return item;\n        }));\n      })\n      .catch((error) => {\n        setErrorMessage('Unable to update a todo');\n        throw error;\n      })\n      .finally(() => {\n        setCurrentIdToLoading(null);\n      });\n  };\n\n  return (\n    <div\n      data-cy=\"Todo\"\n      className={cn('todo', {\n        completed: todo.completed,\n      })}\n    >\n      <label className=\"todo__status-label\">\n        <input\n          data-cy=\"TodoStatus\"\n          type=\"checkbox\"\n          className=\"todo__status\"\n          checked={todo.completed}\n          onClick={handleCheckboxClick}\n        />\n      </label>\n\n      {!editing ? (\n        <>\n          <span\n            data-cy=\"TodoTitle\"\n            className=\"todo__title\"\n            onDoubleClick={() => setEditing(true)}\n          >\n            {todo.title}\n          </span>\n          <button\n            type=\"button\"\n            className=\"todo__remove\"\n            data-cy=\"TodoDelete\"\n            onClick={() => handleDelete(todo.id)}\n          >\n            ×\n          </button>\n        </>\n      ) : (\n        <form>\n          <input\n            data-cy=\"TodoTitleField\"\n            type=\"text\"\n            className=\"todo__title-field\"\n            placeholder=\"Empty todo will be deleted\"\n            ref={titleField}\n            value={todoTitle}\n            onChange={handleTitleEditing}\n            onKeyDown={handleKeyDown}\n            onBlur={handleBlur}\n          />\n        </form>\n      )}\n\n      <div\n        data-cy=\"TodoLoader\"\n        className={cn(\n          'modal overlay', { 'is-active': currentIdToLoading === todo.id },\n        )}\n      >\n        <div className=\"modal-background has-background-white-ter\" />\n        <div className=\"loader\" />\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport cn from 'classnames';\nimport { TodoItem } from '../TodoItem/TodoItem';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  filteredTodos: Todo[];\n  tempTodo: Todo | null;\n  setFocusedInput: (arg: boolean) => void;\n  todos: Todo[];\n  setTodos: (todos: Todo[]) => void;\n  setErrorMessage: (arg: string) => void;\n  USER_ID: number;\n};\n\nexport const TodoList: React.FC<Props> = React.memo((({\n  filteredTodos,\n  tempTodo,\n  setFocusedInput,\n  todos,\n  setTodos,\n  setErrorMessage,\n  USER_ID,\n}) => {\n  return (\n    <section className=\"todoapp__main\" data-cy=\"TodoList\">\n      {filteredTodos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          todos={todos}\n          setTodos={setTodos}\n          setErrorMessage={setErrorMessage}\n          USER_ID={USER_ID}\n          setFocusedInput={setFocusedInput}\n        />\n      ))}\n\n      {tempTodo !== null && (\n        <div\n          data-cy=\"Todo\"\n          className={cn('todo', {\n            completed: tempTodo.completed,\n          })}\n\n        >\n          <label className=\"todo__status-label\">\n            <input\n              data-cy=\"TodoStatus\"\n              type=\"checkbox\"\n              className=\"todo__status\"\n              checked={tempTodo.completed}\n            />\n          </label>\n\n          <span\n            data-cy=\"TodoTitle\"\n            className=\"todo__title\"\n          >\n            {tempTodo.title}\n          </span>\n          <button type=\"button\" className=\"todo__remove\" data-cy=\"TodoDelete\">\n            ×\n          </button>\n\n          <div data-cy=\"TodoLoader\" className=\"modal overlay is-active\">\n            <div className=\"modal-background has-background-white-ter\" />\n            <div className=\"loader\" />\n          </div>\n        </div>\n      )}\n    </section>\n  );\n}));\n","import React from 'react';\nimport cn from 'classnames';\nimport { FilterBy } from '../../types/FilterBy';\n\ntype Props = {\n  filteredBy: FilterBy;\n  setFilteredBy: (filterBy: FilterBy) => void;\n};\n\nexport const TodosFilter: React.FC<Props> = ({ filteredBy, setFilteredBy }) => {\n  const onFilterSelect = (filter: FilterBy) => () => {\n    setFilteredBy(filter);\n  };\n\n  return (\n    <nav className=\"filter\" data-cy=\"Filter\">\n      <a\n        href=\"#/\"\n        data-cy=\"FilterLinkAll\"\n        className={\n          cn('filter__link', { selected: filteredBy === FilterBy.all })\n        }\n        onClick={onFilterSelect(FilterBy.all)}\n      >\n        {FilterBy.all}\n      </a>\n\n      <a\n        href=\"#/active\"\n        data-cy=\"FilterLinkActive\"\n        className={\n          cn('filter__link', { selected: filteredBy === FilterBy.active })\n        }\n        onClick={onFilterSelect(FilterBy.active)}\n      >\n        {FilterBy.active}\n      </a>\n\n      <a\n        href=\"#/completed\"\n        data-cy=\"FilterLinkCompleted\"\n        className={\n          cn('filter__link', { selected: filteredBy === FilterBy.completed })\n        }\n        onClick={onFilterSelect(FilterBy.completed)}\n      >\n        {FilterBy.completed}\n      </a>\n    </nav>\n  );\n};\n","import React from 'react';\nimport { FilterBy } from '../../types/FilterBy';\nimport { Todo } from '../../types/Todo';\nimport { TodosFilter } from '../TodosFilter/TodosFiter';\nimport { deleteTodo } from '../../api/todos';\n\ntype Props = {\n  numberOfNotCompleted: number;\n  filteredBy: FilterBy;\n  setFilteredBy: (filterBy: FilterBy) => void;\n  todos: Todo[];\n  setTodos: (todos: Todo[]) => void;\n  setErrorMessage: (arg: string) => void;\n  setFocusedInput: (arg: boolean) => void;\n};\n\nexport const Footer: React.FC<Props> = ({\n  numberOfNotCompleted,\n  filteredBy,\n  setFilteredBy,\n  todos,\n  setTodos,\n  setErrorMessage,\n  setFocusedInput,\n}) => {\n  const handleClearCompleted = () => {\n    setErrorMessage('');\n    setFocusedInput(false);\n\n    const completedTodos = todos.filter(todo => todo.completed);\n\n    const deletePromises = completedTodos.map(todo => {\n      return deleteTodo(todo.id)\n        .then(() => ({ id: todo.id, success: true }))\n        .catch(() => {\n          setErrorMessage('Unable to delete a todo');\n\n          return { id: todo.id, success: false };\n        });\n    });\n\n    Promise.all(deletePromises)\n      .then(results => {\n        const successIds = results\n          .filter(result => result.success)\n          .map(result => result.id);\n\n        setTodos(todos.filter(todo => !successIds.includes(todo.id)\n          || !completedTodos.some(\n            completedTodo => completedTodo.id === todo.id,\n          )));\n      })\n      .finally(() => setFocusedInput(true));\n  };\n\n  return (\n    <footer className=\"todoapp__footer\" data-cy=\"Footer\">\n      <span className=\"todo-count\" data-cy=\"TodosCounter\">\n        {`${numberOfNotCompleted} items left`}\n      </span>\n\n      <TodosFilter\n        filteredBy={filteredBy}\n        setFilteredBy={setFilteredBy}\n      />\n\n      <button\n        type=\"button\"\n        className=\"todoapp__clear-completed\"\n        data-cy=\"ClearCompletedButton\"\n        onClick={handleClearCompleted}\n        disabled={todos.length === numberOfNotCompleted}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useEffect, useState } from 'react';\nimport { UserWarning } from './UserWarning';\nimport { getTodos, updateTodo } from './api/todos';\nimport { Header } from './components/Header/Header';\nimport { Todo } from './types/Todo';\nimport { FilterBy } from './types/FilterBy';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Footer } from './components/Footer/Footer';\n\nconst USER_ID = 11681;\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filteredBy, setFilteredBy] = useState(FilterBy.all);\n  const [toggleAll, setToggleAll] = useState<boolean>(false);\n  const numberOfNotCompleted = todos.filter(item => !item.completed).length;\n  const [errorMessage, setErrorMessage] = useState('');\n  const [tempTodo, setTempTodo] = useState<Todo | null>(null);\n  const [focusedInput, setFocusedInput] = useState(false);\n\n  const filteredTodos\n    = (filteredBy === FilterBy.all) ? todos : todos.filter((todo) => {\n      switch (filteredBy) {\n        case FilterBy.active:\n          return !todo.completed;\n        case FilterBy.completed:\n          return todo.completed;\n        default:\n          return true;\n      }\n    });\n\n  useEffect(() => {\n    getTodos(USER_ID)\n      .then(setTodos)\n      .catch(() => setErrorMessage('Unable to load todos'));\n  }, []);\n\n  useEffect(() => {\n    setToggleAll(!numberOfNotCompleted && !!todos.length);\n  }, [numberOfNotCompleted, todos.length]);\n\n  const handleToggleAll = () => {\n    const targetStatus = !toggleAll;\n    const todosToBeUpdated\n      = todos.filter(todo => todo.completed !== targetStatus);\n\n    const updatePromises = todosToBeUpdated.map(todo => {\n      return updateTodo({\n        ...todo,\n        completed: targetStatus,\n      })\n        .then(updated => updated)\n        .catch(error => {\n          setErrorMessage('Unable to update a todo');\n          throw error;\n        });\n    });\n\n    Promise.all(updatePromises)\n      .then(updatedTodosList => {\n        const newTodos = todos.map(todo => {\n          const updatedTodo = updatedTodosList.find(ut => ut.id === todo.id);\n\n          return updatedTodo || todo;\n        });\n\n        setTodos(newTodos);\n      });\n  };\n\n  useEffect(() => {\n    if (errorMessage) {\n      const timeoutId = setTimeout(() => {\n        setErrorMessage('');\n      }, 3000);\n\n      return () => {\n        clearTimeout(timeoutId);\n      };\n    }\n\n    return () => { };\n  }, [errorMessage]);\n\n  if (!USER_ID) {\n    return <UserWarning />;\n  }\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <Header\n          todos={todos}\n          setTodos={setTodos}\n          USER_ID={USER_ID}\n          toggleAll={toggleAll}\n          handleToggleAll={handleToggleAll}\n          setErrorMessage={setErrorMessage}\n          tempTodo={tempTodo}\n          setTempTodo={setTempTodo}\n          focusedInput={focusedInput}\n        />\n\n        {!!todos.length && (\n          <>\n            <TodoList\n              filteredTodos={filteredTodos}\n              tempTodo={tempTodo}\n              setFocusedInput={setFocusedInput}\n              todos={todos}\n              setTodos={setTodos}\n              setErrorMessage={setErrorMessage}\n              USER_ID={USER_ID}\n            />\n\n            <Footer\n              numberOfNotCompleted={numberOfNotCompleted}\n              filteredBy={filteredBy}\n              setFilteredBy={setFilteredBy}\n              todos={todos}\n              setTodos={setTodos}\n              setErrorMessage={setErrorMessage}\n              setFocusedInput={setFocusedInput}\n            />\n          </>\n        )}\n      </div>\n\n      <div\n        data-cy=\"ErrorNotification\"\n        className={`notification is-danger is-light has-text-weight-normal ${!errorMessage && 'hidden'}`}\n      >\n        <button\n          data-cy=\"HideErrorButton\"\n          type=\"button\"\n          className=\"delete\"\n          onClick={() => setErrorMessage('')}\n        />\n        {errorMessage}\n      </div>\n    </div>\n  );\n};\n","import { render } from 'react-dom';\n\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\n\nconst root = document.getElementById('root');\n\nrender(<App />, root);\n"],"sourceRoot":""}